package com.example.plantcare.ui.screens

import androidx.compose.foundation.clickable
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material3.*
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.shadow
import androidx.compose.ui.platform.LocalContext
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.plantcare.data.getUserName
import androidx.compose.foundation.layout.WindowInsets
import androidx.compose.foundation.layout.windowInsetsTopHeight
import androidx.compose.foundation.layout.statusBars

@Composable
fun HomeScreen(
    onAddPlantClick: () -> Unit = {},
    onReturnToOnboarding: () -> Unit = {}, // ‚Üê –î–û–ë–ê–í–õ–ï–ù–û
    modifier: Modifier = Modifier
) {
    val context = LocalContext.current
    val userName = context.getUserName()

    Column(
        modifier = modifier
            .fillMaxSize()
            .padding(16.dp),
        horizontalAlignment = Alignment.Start, // –∏–ª–∏ CenterHorizontally, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å
        verticalArrangement = Arrangement.Top // ‚Üê –ö–õ–Æ–ß–ï–í–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï
    ) {
        // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        Text(
            text = "–ü—Ä–∏–≤–µ—Ç, $userName! üëã",
            fontSize = 24.sp,
            fontWeight = FontWeight.Bold,
            modifier = Modifier.padding(bottom = 8.dp)
        )

        Text(
            text = "–í–∞—à–∏ —Ä–∞—Å—Ç–µ–Ω–∏—è:",
            fontSize = 18.sp,
            fontWeight = FontWeight.SemiBold,
            modifier = Modifier.padding(vertical = 16.dp)
        )

        // –°–ø–∏—Å–æ–∫ —Ä–∞—Å—Ç–µ–Ω–∏–π
        LazyColumn(
            verticalArrangement = Arrangement.spacedBy(8.dp),
            modifier = Modifier.weight(1f)
        ) {
            // –ü—Ä–∏–º–µ—Ä —Å—Ç–∞—Ç–∏—á–Ω—ã—Ö —Ä–∞—Å—Ç–µ–Ω–∏–π (–ø–æ–∫–∞ –±–µ–∑ Room)
            items(2) { index ->
                PlantCard(
                    name = if (index == 0) "–§–∏–∫—É—Å" else "–ö–∞–∫—Ç—É—Å",
                    room = if (index == 0) "–ì–æ—Å—Ç–∏–Ω–∞—è" else "–°–ø–∞–ª—å–Ω—è",
                    mood = if (index == 0) "üôÇ" else "üò¢"
                )
            }
        }
        // üî¥ –¢–ï–°–¢–û–í–ê–Ø –ö–ù–û–ü–ö–ê ‚Äî –í–†–ï–ú–ï–ù–ù–û!
        OutlinedButton(
            onClick = onReturnToOnboarding,
            modifier = Modifier
                .fillMaxWidth()
                .padding(bottom = 8.dp),
            shape = RoundedCornerShape(8.dp)
        ) {
            Text("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—Ö–æ–¥—É (—Ç–µ—Å—Ç)", color = MaterialTheme.colorScheme.onSurfaceVariant)
        }
        // –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        Button(
            onClick = onAddPlantClick,
            modifier = Modifier
                .fillMaxWidth()
                .padding(top = 16.dp),
            shape = RoundedCornerShape(12.dp)
        ) {
            Text("–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ç–µ–Ω–∏–µ", fontSize = 16.sp)
        }
    }
}

@Composable
private fun PlantCard(
    name: String,
    room: String,
    mood: String,
    modifier: Modifier = Modifier
) {
    Surface(
        modifier = modifier
            .fillMaxWidth()
            .shadow(elevation = 4.dp, shape = RoundedCornerShape(12.dp)),
        shape = RoundedCornerShape(12.dp),
        color = MaterialTheme.colorScheme.surface
    ) {
        Row(
            modifier = Modifier
                .fillMaxWidth()
                .padding(16.dp),
            verticalAlignment = Alignment.CenterVertically,
            horizontalArrangement = Arrangement.SpaceBetween
        ) {
            Column(
                modifier = Modifier.weight(1f)
            ) {
                Text(
                    text = name,
                    fontSize = 16.sp,
                    fontWeight = FontWeight.Bold
                )
                Text(
                    text = "–ö–æ–º–Ω–∞—Ç–∞: $room",
                    fontSize = 14.sp,
                    color = MaterialTheme.colorScheme.onSurfaceVariant
                )
            }
            Text(
                text = mood,
                fontSize = 20.sp
            )
        }
    }
}